#!/usr/bin/env ruby
require File.dirname(__FILE__) + "/../lib/fraction_calculator"

input = ARGV.join("")
argv_len = ARGV.length
def help
  puts "
Usage: ? [fraction expression]

Explanation:
1. Mixed numbers will be represented by whole_numerator/denominator. e.g. 3_1/4
2. Legal operators shall be *, /, +, - (multiply, divide, add, subtract)

Example:
? 1+1
= 2

? 1/3 + 1/6
= 1/2

? 1/2*1/3
= 1/6
options:
  -h, --help          print node command line options (currently set)
  -e, --examples      show input and out examples
"
end

if argv_len == 0 || (argv_len == 1 && ('-h' == ARGV[0] || '--help' == ARGV[0]))
  help
elsif argv_len == 1 && ('-e' == ARGV[0] || '--example' == ARGV[0])
  puts "Examples:"
  test_case = ["  2 _ 3 /5  + 3_10/2 ",
               " - 2 _ 3 /5  + 3_10/2 ",
               "1/2*1/3",
               "1_3/5-1_1/5",
               "1_1/3*1_1/2",
               "1_2/3-1_1/3",
               "1/2+2/1",
               "2+3",
               "2+1/3",
               "1/3/1/2",
               "1_1/2-1_1/2",
               "-1*-1_1/2",
               "1*-1/3",
               "1/2-1",
               ""]
  test_case.each_with_index do |input, index|
    puts "? #{input}"
    cal = Calculator.new(input)
    result = cal.calculate
    puts "= #{result}\n" if result && result.size > 0
  end
else
  cal = Calculator.new(input)
  result = cal.calculate
  puts "= #{result}\n" if result && result.size > 0
end

